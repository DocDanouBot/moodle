import BootstrapTour from"./tour";import Templates from"core/templates";import log from"core/log";import notification from"core/notification";import*as tourRepository from"./repository";import Pending from"core/pending";import{eventTypes}from"./events";let currentTour=null;let tourId=null;let restartTourAndKeepProgress=false;let currentStepNo=null;const findMatchingTour=(tourDetails,filters)=>{return tourDetails.find(tour=>filters.some(filter=>{if(filter&&filter.filterMatches){return filter.filterMatches(tour)}return true}))};export const init=async(tourDetails,filters)=>{const requirements=[];filters.forEach(filter=>{requirements.push(import(filter))});const filterPlugins=await Promise.all(requirements);const matchingTour=findMatchingTour(tourDetails,filterPlugins);if(!matchingTour){return}tourId=matchingTour.tourId;let startTour=matchingTour.startTour;if(typeof startTour==="undefined"){startTour=true}if(startTour){fetchTour(tourId)}addResetLink();document.querySelector("body").addEventListener("click",e=>{const resetLink=e.target.closest("#resetpagetour");if(resetLink){e.preventDefault();resetTourState(tourId)}});window.addEventListener("resize",()=>{if(currentTour&&currentTour.tourRunning){clearTimeout(window.resizedFinished);window.resizedFinished=setTimeout(()=>{currentStepNo=currentTour.getCurrentStepNumber();restartTourAndKeepProgress=true;resetTourState(tourId)},250)}})};const fetchTour=async tourId=>{const pendingPromise=new Pending(`admin_usertour_fetchTour:${tourId}`);try{const response=await tourRepository.fetchTour(tourId);if(response.hasOwnProperty("tourconfig")){const{html}=await Templates.renderForPromise("tool_usertours/tourstep",response.tourconfig);startBootstrapTour(tourId,html,response.tourconfig)}pendingPromise.resolve()}catch(error){pendingPromise.resolve();notification.exception(error)}};const getPreferredResetLocation=()=>{let location=document.querySelector(".tool_usertours-resettourcontainer");if(location){return location}location=document.querySelector(".logininfo");if(location){return location}location=document.querySelector("footer");if(location){return location}return document.body};const addResetLink=()=>{const pendingPromise=new Pending("admin_usertour_addResetLink");Templates.render("tool_usertours/resettour",{}).then(function(html,js){Templates.appendNodeContents(getPreferredResetLocation(),html,js);return}).catch().then(pendingPromise.resolve).catch()};const startBootstrapTour=(tourId,template,tourConfig)=>{if(currentTour&&currentTour.tourRunning){currentTour.endTour();currentTour=null}document.addEventListener(eventTypes.tourEnded,markTourComplete);document.addEventListener(eventTypes.stepRenderer,markStepShown);tourConfig.tourName=tourConfig.name;delete tourConfig.name;tourConfig.template=template;tourConfig.steps=tourConfig.steps.map(function(step){if(typeof step.element!=="undefined"){step.target=step.element;delete step.element}if(typeof step.reflex!=="undefined"){step.moveOnClick=!!step.reflex;delete step.reflex}if(typeof step.content!=="undefined"){step.body=step.content;delete step.content}return step});currentTour=new BootstrapTour(tourConfig);let startAt=0;if(restartTourAndKeepProgress&&currentStepNo){startAt=currentStepNo;restartTourAndKeepProgress=false;currentStepNo=null}return currentTour.startTour(startAt)};const markStepShown=e=>{const tour=e.detail.tour;const stepConfig=tour.getStepConfig(tour.getCurrentStepNumber());tourRepository.markStepShown(stepConfig.stepid,tourId,tour.getCurrentStepNumber()).catch(log.error)};const markTourComplete=e=>{document.removeEventListener(eventTypes.tourEnded,markTourComplete);document.removeEventListener(eventTypes.stepRenderer,markStepShown);const tour=e.detail.tour;const stepConfig=tour.getStepConfig(tour.getCurrentStepNumber());tourRepository.markTourComplete(stepConfig.stepid,tourId,tour.getCurrentStepNumber()).catch(log.error)};export const resetTourState=tourId=>tourRepository.resetTourState(tourId).then(response=>{if(response.startTour){fetchTour(response.startTour)}return}).catch(notification.exception);