import $ from"jquery";import Pending from"core/pending";import*as FocusLockManager from"core/local/aria/focuslock";const dropdownFix=()=>{let focusEnd=false;const setFocusEnd=(end=true)=>{focusEnd=end};const getFocusEnd=()=>{const result=focusEnd;focusEnd=false;return result};const shiftFocus=(element,focusCheck=null)=>{const pendingPromise=new Pending("core/aria:delayed-focus");setTimeout(()=>{if(!focusCheck||focusCheck()){element.focus()}pendingPromise.resolve()},50)};const handleMenuButton=e=>{const trigger=e.key;let fixFocus=false;if(trigger===" "||trigger==="Enter"){fixFocus=true;e.preventDefault();e.target.click()}if(trigger==="ArrowUp"||trigger==="ArrowDown"){fixFocus=true}if(!fixFocus){return}const menu=e.target.parentElement.querySelector('[role="menu"]');let menuItems=false;let foundMenuItem=false;if(menu){menuItems=menu.querySelectorAll('[role="menuitem"]')}if(menuItems&&menuItems.length>0){if(trigger==="ArrowUp"){setFocusEnd()}else{setFocusEnd(false)}if(getFocusEnd()){foundMenuItem=menuItems[menuItems.length-1]}else{foundMenuItem=menuItems[0]}}if(foundMenuItem){shiftFocus(foundMenuItem)}};document.addEventListener("keypress",e=>{if(e.target.matches('.dropdown [role="menu"] [role="menuitem"]')){const menu=e.target.closest('[role="menu"]');if(!menu){return}const menuItems=menu.querySelectorAll('[role="menuitem"]');if(!menuItems){return}const trigger=e.key.toLowerCase();for(let i=0;i<menuItems.length;i++){const item=menuItems[i];const itemText=item.text.trim().toLowerCase();if(itemText.indexOf(trigger)==0){shiftFocus(item);break}}}});document.addEventListener("keydown",e=>{if(e.target.matches('[data-toggle="dropdown"]')){handleMenuButton(e)}if(e.target.matches('.dropdown [role="menu"] [role="menuitem"]')){const trigger=e.key;let next=false;const menu=e.target.closest('[role="menu"]');if(!menu){return}const menuItems=menu.querySelectorAll('[role="menuitem"]');if(!menuItems){return}if(trigger=="ArrowDown"){for(let i=0;i<menuItems.length-1;i++){if(menuItems[i]==e.target){next=menuItems[i+1];break}}if(!next){next=menuItems[0]}}else if(trigger=="ArrowUp"){for(let i=1;i<menuItems.length;i++){if(menuItems[i]==e.target){next=menuItems[i-1];break}}if(!next){next=menuItems[menuItems.length-1]}}else if(trigger=="Home"){next=menuItems[0]}else if(trigger=="End"){next=menuItems[menuItems.length-1]}if(next){e.preventDefault();shiftFocus(next)}return}});$(".dropdown").on("shown.bs.dropdown",e=>{const dialog=e.target.querySelector(`#${e.relatedTarget.getAttribute("aria-controls")}[role="dialog"]`);if(dialog){setTimeout(()=>{FocusLockManager.trapFocus(dialog)})}});$(".dropdown").on("hidden.bs.dropdown",e=>{const dialog=e.target.querySelector(`#${e.relatedTarget.getAttribute("aria-controls")}[role="dialog"]`);if(dialog){FocusLockManager.untrapFocus()}const trigger=e.target.querySelector('[data-toggle="dropdown"]');const focused=e.clickEvent?.target||(document.activeElement!==document.body?document.activeElement:null);if(trigger&&focused&&e.target.contains(focused)){shiftFocus(trigger,()=>{if(document.activeElement===document.body){return true}return e.target.contains(document.activeElement)})}})};const comboboxFix=()=>{$(document).on("show.bs.dropdown",e=>{if(e.relatedTarget.matches('[role="combobox"]')){const combobox=e.relatedTarget;const listbox=document.querySelector(`#${combobox.getAttribute("aria-controls")}[role="listbox"]`);if(listbox){const selectedOption=listbox.querySelector('[role="option"][aria-selected="true"]');setTimeout(()=>{if(selectedOption){selectedOption.classList.add("active");combobox.setAttribute("aria-activedescendant",selectedOption.id)}else{const firstOption=listbox.querySelector('[role="option"]');firstOption.setAttribute("aria-selected","true");firstOption.classList.add("active");combobox.setAttribute("aria-activedescendant",firstOption.id)}},0)}}});$(document).on("hidden.bs.dropdown",e=>{if(e.relatedTarget.matches('[role="combobox"]')){const combobox=e.relatedTarget;const listbox=document.querySelector(`#${combobox.getAttribute("aria-controls")}[role="listbox"]`);combobox.removeAttribute("aria-activedescendant");if(listbox){setTimeout(()=>{listbox.querySelectorAll('.active[role="option"]').forEach(option=>{option.classList.remove("active")})},0)}}});document.addEventListener("keydown",e=>{if(e.target.matches('[role="combobox"][aria-controls]:not([aria-haspopup=dialog])')){const combobox=e.target;const trigger=e.key;let next=null;const listbox=document.querySelector(`#${combobox.getAttribute("aria-controls")}[role="listbox"]`);const options=listbox.querySelectorAll('[role="option"]');const activeOption=listbox.querySelector('.active[role="option"]');const editable=combobox.hasAttribute("aria-autocomplete");if(options&&(activeOption||editable)){if(trigger=="ArrowDown"){for(let i=0;i<options.length-1;i++){if(options[i]==activeOption){next=options[i+1];break}}if(editable&&!next){next=options[0]}}if(trigger=="ArrowUp"){for(let i=1;i<options.length;i++){if(options[i]==activeOption){next=options[i-1];break}}if(editable&&!next){next=options[options.length-1]}}else if(trigger=="Home"&&!editable){next=options[0]}else if(trigger=="End"&&!editable){next=options[options.length-1]}else if(trigger==" "&&!editable||trigger=="Enter"){e.preventDefault();selectOption(combobox,activeOption)}else if(!editable){for(let i=0;i<options.length;i++){const option=options[i];const optionText=option.textContent.trim().toLowerCase();const keyPressed=e.key.toLowerCase();if(optionText.indexOf(keyPressed)==0){next=option;break}}}if(next){e.preventDefault();if(activeOption){activeOption.classList.remove("active")}next.classList.add("active");combobox.setAttribute("aria-activedescendant",next.id);next.scrollIntoView({block:"nearest"})}}}});document.addEventListener("click",e=>{const option=e.target.closest('[role="listbox"] [role="option"]');if(option){const listbox=option.closest('[role="listbox"]');const combobox=document.querySelector(`[role="combobox"][aria-controls="${listbox.id}"]`);if(combobox){selectOption(combobox,option)}}});document.addEventListener("change",e=>{if(e.target.matches('input[type="hidden"][id]')){const combobox=document.querySelector(`[role="combobox"][data-input-element="${e.target.id}"]`);const option=e.target.parentElement.querySelector(`[role="option"][data-value="${e.target.value}"]`);if(combobox&&option){selectOption(combobox,option)}}});const selectOption=(combobox,option)=>{const listbox=option.closest('[role="listbox"]');const oldSelectedOption=listbox.querySelector('[role="option"][aria-selected="true"]');if(oldSelectedOption!=option){if(oldSelectedOption){oldSelectedOption.removeAttribute("aria-selected")}option.setAttribute("aria-selected","true")}if(combobox.hasAttribute("value")){combobox.value=option.dataset.shortText||option.textContent.replace(/[\n\r]+|[\s]{2,}/g," ").trim()}else{combobox.textContent=option.dataset.shortText||option.textContent}if(combobox.dataset.inputElement){const inputElement=document.getElementById(combobox.dataset.inputElement);if(inputElement&&inputElement.value!=option.dataset.value){inputElement.value=option.dataset.value;inputElement.dispatchEvent(new Event("change",{bubbles:true}))}}}};const autoFocus=()=>{window.addEventListener("load",()=>{const alerts=document.querySelectorAll('[data-aria-autofocus="true"][role="alert"]');Array.prototype.forEach.call(alerts,autofocusElement=>{autofocusElement.innerHTML+=" ";autofocusElement.removeAttribute("data-aria-autofocus")})})};const updateTabFocus=e=>{const tabList=e.target.closest('[role="tablist"]');const vertical=tabList.getAttribute("aria-orientation")=="vertical";const rtl=window.right_to_left();const arrowNext=vertical?"ArrowDown":rtl?"ArrowLeft":"ArrowRight";const arrowPrevious=vertical?"ArrowUp":rtl?"ArrowRight":"ArrowLeft";const tabs=Array.prototype.filter.call(tabList.querySelectorAll('[role="tab"]'),tab=>!!tab.offsetHeight);for(let i=0;i<tabs.length;i++){tabs[i].index=i}switch(e.key){case arrowNext:e.preventDefault();if(e.target.index!==undefined&&tabs[e.target.index+1]){tabs[e.target.index+1].focus()}else{tabs[0].focus()}break;case arrowPrevious:e.preventDefault();if(e.target.index!==undefined&&tabs[e.target.index-1]){tabs[e.target.index-1].focus()}else{tabs[tabs.length-1].focus()}break;case"Home":e.preventDefault();tabs[0].focus();break;case"End":e.preventDefault();tabs[tabs.length-1].focus()}};const tabElementFix=()=>{document.addEventListener("keydown",e=>{if(["ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Home","End"].includes(e.key)){if(e.target.matches('[role="tablist"] [role="tab"]')){updateTabFocus(e)}}});document.addEventListener("click",e=>{if(e.target.matches('[role="tablist"] [data-toggle="tab"], [role="tablist"] [data-toggle="pill"]')){const tabs=e.target.closest('[role="tablist"]').querySelectorAll('[data-toggle="tab"], [data-toggle="pill"]');e.preventDefault();$(e.target).tab("show");tabs.forEach(tab=>{tab.tabIndex=-1});e.target.tabIndex=0}})};const collapseFix=()=>{document.addEventListener("keydown",e=>{if(e.target.matches('[data-toggle="collapse"]')){if(e.key===" "){e.preventDefault();e.target.click()}}})};export const init=()=>{dropdownFix();comboboxFix();autoFocus();tabElementFix();collapseFix()};